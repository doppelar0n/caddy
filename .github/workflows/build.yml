name: Build Caddy with Plugins

on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    outputs:
      latest_version: ${{ steps.get-version.outputs.latest_version }}
      skip: ${{ steps.check-release.outputs.skip }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Get Latest Caddy Version
        id: get-version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r '.tag_name')
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT

      - name: Check if Release Exists
        id: check-release
        run: |
          RESPONSE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ steps.get-version.outputs.latest_version }})
          echo "API Response: $RESPONSE"
          if echo "$RESPONSE" | jq -e '.id' > /dev/null; then
            echo "Release exists."
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip Job if Release Exists
        if: steps.check-release.outputs.skip == 'true'
        run: echo "Release already exists. Skipping build."

      - name: Install xcaddy
        if: steps.check-release.outputs.skip == 'false'
        run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

      - name: Build Caddy
        if: steps.check-release.outputs.skip == 'false'
        run: |
          xcaddy build \
            --output caddy-${{ matrix.arch }} \
            --with github.com/lucaslorentz/caddy-docker-proxy/v2
          mkdir -p dist
      
      - name: Generate SHA256
        run: sha256sum caddy-${{ matrix.arch }} > caddy-${{ matrix.arch }}.sha256

      - name: Upload Artifact
        if: steps.check-release.outputs.skip == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: caddy-${{ matrix.arch }}
          path: |
            caddy-${{ matrix.arch }}
            caddy-${{ matrix.arch }}.sha256

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Skip Job if Release Exists
        if: needs.build.outputs.skip == 'true'
        run: echo "Release already exists."

      - name: Download amd64 Binary
        if: needs.build.outputs.skip == 'false'
        uses: actions/download-artifact@v4
        with:
          name: caddy-amd64

      - name: Download arm64 Binary
        if: needs.build.outputs.skip == 'false'
        uses: actions/download-artifact@v4
        with:
          name: caddy-arm64

      - name: Create Release
        if: needs.build.outputs.skip == 'false'
        uses: ncipollo/release-action@v1
        with:
          artifacts: "caddy-*"
          token: ${{ secrets.PAT_TOKEN }}
          tag: ${{ needs.build.outputs.latest_version }}
          name: Caddy ${{ needs.build.outputs.latest_version }}
          commit: ${{ github.sha }}
          skipIfReleaseExists: true
